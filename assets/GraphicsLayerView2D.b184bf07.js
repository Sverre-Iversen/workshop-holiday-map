import{g as s,j as p,a4 as h,a5 as a,a6 as o}from"./index.28204634.js";import{f as g,u as m}from"./LayerView.3f957b48.js";import{i as l}from"./GraphicContainer.a70edf79.js";import{a as c}from"./BaseGraphicContainer.fad6790a.js";import"./utils.c9645ca6.js";import"./Utils.6a347352.js";import"./enums.6e42a319.js";import"./enums.de935fa5.js";import"./Texture.97806b82.js";import"./VertexElementDescriptor.d386088d.js";import"./MaterialKey.8d919001.js";import"./CIMSymbolHelper.437730f6.js";import"./BidiEngine.ec67919b.js";import"./GeometryUtils.814cb798.js";import"./normalizeUtilsSync.a11435a6.js";import"./projectionSupport.0cf0914c.js";import"./json.d1a0fa35.js";import"./VertexArrayObject.e9c17f76.js";import"./FeatureContainer.52f9bd64.js";import"./TileContainer.ef5fef68.js";import"./WGLContainer.e8ab7d6c.js";import"./pixelUtils.4b18f06d.js";import"./ProgramTemplate.f648ddbe.js";import"./StyleDefinition.627ffe6c.js";import"./config.40d47db8.js";import"./GeometryUtils.8166011b.js";import"./earcut.d30cbec0.js";import"./visualVariablesUtils.3d200005.js";import"./visualVariablesUtils.15bb2785.js";import"./Matcher.2cff3216.js";import"./tileUtils.4f6f0a33.js";import"./TileClipper.45a2e905.js";import"./Geometry.b68345ae.js";import"./ExpandedCIM.e9591122.js";import"./quantizationUtils.852042e2.js";import"./devEnvironmentUtils.8c6e6b72.js";import"./schemaUtils.d6eeadc3.js";import"./createSymbolSchema.e034cbfe.js";import"./MD5.97b39efc.js";import"./util.5179d486.js";import"./ComputedAttributeStorage.3978cd1b.js";import"./centroid.cead202c.js";import"./vec3f32.8d37ecf5.js";const n={remove(){},pause(){},resume(){}};let r=class extends g(m){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new c({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new l(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.handles.add(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),"graphicslayerview2d")}detach(){this.container.removeAllChildren(),this.graphicsView.destroy(),this.graphicsView=null,this.handles.remove("graphicslayerview2d")}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){if(this.graphicsView)return this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate)}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;return typeof i=="number"?t=[i]:i instanceof s?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(e=>e&&e.uid):p.isCollection(i)&&i.length>0&&(t=i.map(e=>e&&e.uid).toArray()),t=t==null?void 0:t.filter(e=>e!=null),t.length?(this._addHighlight(t),{remove:()=>this._removeHighlight(t)}):n}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;e===0?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};h([a()],r.prototype,"graphicsView",void 0),r=h([o("esri.views.2d.layers.GraphicsLayerView2D")],r);const ri=r;export{ri as default};
